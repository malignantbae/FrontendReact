{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\igor.vitriago\\\\FrontendReact\\\\src\\\\pages\\\\BadgeEdit.js\";\nimport React from 'react';\nimport './styles/BadgeEdit.css';\nimport header from \"../images/platziconf-logo.svg\";\nimport Badge from '../components/Badge';\nimport BadgeForm from '../components/BadgeForm';\nimport PageLoading from '../components/PageLoading';\nimport api from '../api';\n\nvar BadgeEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgeEdit, _React$Component);\n\n  function BadgeEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BadgeEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BadgeEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      Loading: true,\n      error: null,\n      form: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        jobTitle: '',\n        twitter: '',\n        avatarUrl: ''\n      }\n    };\n\n    _this.fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  error: null\n                });\n\n                _context.prev = 1;\n                _context.next = 4;\n                return api.badges.read(_this.props.match.params.badgeId);\n\n              case 4:\n                data = _context.sent;\n\n                _this.setState({\n                  loading: false,\n                  form: data\n                });\n\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n\n                _this.setState({\n                  loading: false,\n                  error: _context.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  error: null\n                });\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return api.badges.create(_this.state.form);\n\n              case 5:\n                _this.setState({\n                  loading: false\n                });\n\n                _this.props.history.push('/badges');\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _this.setState({\n                  loading: false,\n                  error: _context2.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 9]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(BadgeEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(PageLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"BadgeEdit__hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"BadgeEdit__hero-image img-fluid\",\n        src: header,\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        firstName: this.state.form.firstName || 'FIRST_NAME',\n        lastName: this.state.form.lastName || 'LAST_NAME',\n        twitter: this.state.form.twitter || 'twitter',\n        jobTitle: this.state.form.jobTitle || 'JOB_TITLE',\n        email: this.state.form.email || 'EMAIL',\n        avatarUrl: this.state.form.avatarUrl || 'avatarUrl',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(BadgeForm, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        formValues: this.state.form,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return BadgeEdit;\n}(React.Component);\n\nexport default BadgeEdit;","map":{"version":3,"sources":["C:\\Users\\igor.vitriago\\FrontendReact\\src\\pages\\BadgeEdit.js"],"names":["React","Badge","BadgeForm","PageLoading","api","BadgeEdit","state","Loading","error","form","firstName","lastName","email","jobTitle","twitter","avatarUrl","fetchData","e","setState","loading","badges","read","props","match","params","badgeId","data","handleChange","target","name","value","handleSubmit","preventDefault","create","history","push","header","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport './styles/BadgeEdit.css';\r\nimport header from '../images/platziconf-logo.svg';\r\nimport Badge from '../components/Badge';\r\nimport BadgeForm from '../components/BadgeForm';\r\nimport PageLoading from '../components/PageLoading';\r\nimport api from '../api';\r\n\r\nclass BadgeEdit extends React.Component {\r\n  state = {\r\n    Loading: true,\r\n    error: null,\r\n    form: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      jobTitle: '',\r\n      twitter: '',\r\n      avatarUrl: '',\r\n    },\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.fetchData()\r\n  }\r\n\r\n  fetchData = async e => {\r\n    this.setState({\r\n      loading: true,\r\n      error: null\r\n    })\r\n    try {\r\n      const data = await api.badges.read(this.props.match.params.badgeId);\r\n    this.setState({loading: false, form: data})\r\n    } catch (error) {\r\n    this.setState({loading: false, error: error})\r\n    }\r\n\r\n  }\r\n  handleChange = e => {\r\n    this.setState({\r\n      form: {\r\n        ...this.state.form,\r\n        [e.target.name]: e.target.value,\r\n      },\r\n    });\r\n  };\r\n\r\n  handleSubmit = async e =>{\r\n    e.preventDefault()\r\n    this.setState({loading: true, error: null})\r\n\r\n    try {\r\n      await api.badges.create(this.state.form)\r\n      this.setState({loading: false})\r\n\r\n      this.props.history.push('/badges');\r\n    } catch (error) {\r\n      this.setState({loading: false, error: error})\r\n    }\r\n\r\n  }\r\n  render() {\r\n    if(this.state.loading){\r\n      return<PageLoading/>\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"BadgeEdit__hero\">\r\n          <img className=\"BadgeEdit__hero-image img-fluid\" src={header} alt=\"Logo\" />\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <Badge\r\n                firstName={this.state.form.firstName || 'FIRST_NAME'}\r\n                lastName={this.state.form.lastName || 'LAST_NAME'}\r\n                twitter={this.state.form.twitter || 'twitter' }\r\n                jobTitle={this.state.form.jobTitle || 'JOB_TITLE'}\r\n                email={this.state.form.email || 'EMAIL'}\r\n                avatarUrl={this.state.form.avatarUrl || 'avatarUrl'}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-6\">\r\n              <BadgeForm\r\n                onChange={this.handleChange}\r\n                onSubmit={this.handleSubmit}\r\n                formValues={this.state.form}\r\n                error={this.state.error}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BadgeEdit;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}